// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// The file model used to track the files uploaded in the bucket
model File {
  id        String   @id @default(uuid())
  name      String
  path      String   @unique
  type      FileType
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Marker    Marker[] @relation("model")
  Model     Marker[] @relation("marker")
  Preview   Marker[] @relation("preview")
}

// The marker model used to track the markers and their linked files
model Marker {
  id        String   @id @default(uuid())
  name      String
  model     File     @relation("model", fields: [modelId], references: [id], onDelete: Cascade)
  marker    File     @relation("marker", fields: [markerId], references: [id], onDelete: Cascade)
  preview   File     @relation("preview", fields: [previewId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  modelId   String
  markerId  String
  previewId String
  Entity    Entity?  @relation("Data")
}

enum FileType {
  MODEL
  MARKER
  PREVIEW
}

// The data of a fish and its associated markers
model Entity {
  id        String   @id @default(uuid())
  names     Names[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Marker    Marker   @relation("Data", fields: [MarkerId], references: [id])
  MarkerId  String   @unique

  description String?

  long Float
  food String[]
  zone String
}

model Names {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Entity    Entity   @relation(fields: [entityId], references: [id])
  entityId  String
  name      String
  language  String
  primary   Boolean  @default(false)
}

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model File {
  id        String   @id @default(uuid())
  name      String
  path      String   @unique
  type      FileType
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Marker    Marker[] @relation("model")
  Model     Marker[] @relation("marker")
}

model Marker {
  id        String   @id @default(uuid())
  name      String
  model     File     @relation("model", fields: [modelId], references: [id], onDelete: Cascade)
  marker    File     @relation("marker", fields: [markerId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  modelId   String
  markerId  String
  fileId    String?
  Entity    Entity[]
}

enum FileType {
  MODEL
  MARKER
}

model Entity {
  id          String   @id @default(uuid())
  names       String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Marker      Marker   @relation(fields: [markerId], references: [id])
  markerId    String
  description String?

  OtherNames OtherName[]
  long       Float?
  food       String?
}

model OtherName {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Entity    Entity   @relation(fields: [entityId], references: [id])
  entityId  String
  name      String
  language  String
}

name: "Deploy"
on:
  push:
    branches:
      - dev
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm run build
      - name: Upload Next App
        uses: actions/upload-artifact@v4
        with:
          name: nextApp
          path: apps/web/dist
      - name: Upload server
        uses: actions/upload-artifact@v4
        with:
          name: server
          path: apps/server/dist

  deployApp:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: download app
        uses: actions/download-artifact@v4
        with:
          name: nextApp
      - name: Copy repository contents via scp
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSHKEY }}
          source: "."
          target: "/var/www/html/Aquarium/web/"
      # - name: Executing remote command
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.HOST }}
      #     username: ${{ secrets.USERNAME }}
      #     port: ${{ secrets.PORT }}
      #     key: ${{ secrets.SSHKEY }}
      #     script: |
      #       cd /var/www/html/Aquarium/web/
      #       pm2 start --name AquariumServer index.js

  deployServer:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Copy repository contents via scp
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSHKEY }}
          source: "."
          target: "/var/www/html/Aquarium/api/"
      - name: Executing remote command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSHKEY }}
          script: |
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            cd /var/www/html/Aquarium/api/
            pnpm install 
            cd /var/www/html/Aquarium/api/apps/server
            pm2 start --name AquariumServer pnpm -- run start
